Confeccionar una p√°gina web a modo de referencia profesional, en la que haya una cabecera con botones redondeados, a la izquierda, mi nombre Santiago Fr√≠as, precedido de un icono skynet que se resalte en azul al pasar el raton o pulsarlo, a la derecha un bot√≥n con el nombre Contact, con icono de sobre de env√≠o, que al pulsarlo contenga mi correo electr√≥nico, y se resalte con color naranja suave, y en el centro una secci√≥n con cuatro botones, que se resalten en verde al pasar o pulsarlos, de izquierda a derecha en horizontal, el primero Home con icono de una casa, el segundo Experience con icono de engranaje, el tercero Projects con icono de cohete, y el cuarto Skills con icono de rayo. Adjunta los archivos necesarios para cargarla en un navegador
----

Perfecto, Santiago. Antes de armar los archivos paso a paso, quiero saber un poco m√°s de ti para adaptar el dise√±o y el nivel t√©cnico. Muy breve:

¬øEst√°s aprendiendo a programar p√°ginas web (HTML/CSS/JS)?

¬øVas a editar este proyecto t√∫ mismo o solo necesitas una base que funcione sin tocar mucho?

¬øQuieres que esta web sea totalmente simple (solo HTML y CSS), o te interesa aprender a mejorarla luego (por ejemplo con animaciones o dise√±o responsivo)?

üìå En paralelo, para que avances, vamos a preparar los archivos base que podr√≠as usar. Esta web necesita como m√≠nimo:

index.html ‚Üí estructura de la p√°gina

styles.css ‚Üí estilos (colores, botones, √≠conos, etc.)

Acceso a √≠conos ‚Üí Usaremos Font Awesome (gratis y f√°cil)

¬øTe gustar√≠a que a√±adamos tambi√©n un poco de interactividad (por ejemplo, que el bot√≥n "Contact" muestre el email como un pop-up o tooltip)? O prefieres dejarlo en texto visible.

Cont√©stame eso, y si quieres arrancamos a construir juntos, bloque por bloque, para que aprendas lo que hace cada parte.

---
Estoy aprendiendo, debe ser una web simple y sencilla.  Quiero una base para visualizar mi trayectoria en mi p√°gina personal de github
---

¬°Genial, Santiago! Como est√°s aprendiendo, vamos a hacer todo simple, pero con estructura para que puedas entenderlo bien. Con la base que te voy a dar, podr√°s cargarla directamente en tu p√°gina de GitHub Pages sin problemas.

Pasos para construir la web

- HTML: Estructura b√°sica con los botones y secciones que mencionaste. "index.html" Contendr√° el contenido de la p√°gina.

- CSS: Dise√±o para los estilos (colores, transiciones, iconos). "styles.css" - Tendr√° los estilos de la p√°gina.

- Iconos: Usaremos Font Awesome para los √≠conos.

Te voy a explicar brevemente lo que haremos:

- Cabecera: Con tu nombre y un icono "skynet" (algo relacionado con una red o inteligencia artificial) a la izquierda, y el bot√≥n "Contact" a la derecha con tu correo.

- Centro: Los cuatro botones horizontales (Home, Experience, Projects, Skills).

- Estilos: Usaremos transiciones para resaltar los botones al pasar el rat√≥n.

==== index.html
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Santiago Fr√≠as - P√°gina Personal</title>
  <!-- Vincular Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <!-- Cabecera -->
  <header>
    <div class="left">
      <i class="fas fa-network-wired"></i>
      <span class="name">Santiago Fr√≠as</span>
    </div>
    <div class="right">
      <button class="contact-btn" onclick="location.href='mailto:santiagof@example.com'">
        <i class="fas fa-envelope"></i> Contact
      </button>
    </div>
  </header>

  <!-- Secci√≥n de botones -->
  <div class="main-buttons">
    <button class="main-btn home">
      <i class="fas fa-home"></i> Home
    </button>
    <button class="main-btn experience">
      <i class="fas fa-cogs"></i> Experience
    </button>
    <button class="main-btn projects">
      <i class="fas fa-rocket"></i> Projects
    </button>
    <button class="main-btn skills">
      <i class="fas fa-bolt"></i> Skills
    </button>
  </div>
</body>
</html>
===styles.css
/* Reset b√°sicos */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Estilos generales */
body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
}

/* Cabecera */
header {
  display: flex;
  justify-content: space-between;
  padding: 20px;
  background-color: #333;
  color: white;
}

header .left {
  display: flex;
  align-items: center;
}

header .left .name {
  margin-left: 10px;
  font-size: 1.5em;
}

header .right {
  display: flex;
  align-items: center;
}

button {
  padding: 10px 20px;
  border: none;
  border-radius: 25px;
  cursor: pointer;
  font-size: 1em;
  display: flex;
  align-items: center;
}

/* Botones de la cabecera */
header .left i {
  font-size: 2em;
}

.contact-btn {
  background-color: #ff9800;
  color: white;
  transition: background-color 0.3s ease;
}

.contact-btn:hover {
  background-color: #e68900;
}

/* Botones principales */
.main-buttons {
  display: flex;
  justify-content: center;
  margin-top: 50px;
}

.main-btn {
  margin: 0 10px;
  background-color: #4caf50;
  color: white;
  transition: background-color 0.3s ease;
}

.main-btn:hover {
  background-color: #45a049;
}

.main-btn i {
  margin-right: 8px;
}

/* Efecto de resaltado al pasar el rat√≥n */
.main-btn:hover {
  background-color: #66bb6a;
}
===

Explicaci√≥n de lo que hicimos:

HTML:

- Creamos una cabecera con dos partes: tu nombre (con un icono a la izquierda) y el bot√≥n de "Contact" a la derecha.

- Los botones principales est√°n en el centro (Home, Experience, Projects, Skills).

- Los √≠conos de Font Awesome son a√±adidos con <i class="fas fa-[icon]"></i>.

CSS:

- Usamos flexbox para alinear los elementos de la cabecera y los botones principales.

- Aplicamos colores y transiciones a los botones para que cambien de color al pasar el rat√≥n.

- Los botones de "Contact" y los de la secci√≥n principal tienen colores diferentes y efectos de hover.


Pasos para subir a GitHub Pages:

Crea un repositorio en GitHub (si no tienes uno).

Sube los archivos index.html y styles.css a ese repositorio.

Activa GitHub Pages en la configuraci√≥n de tu repositorio, seleccionando la rama principal (main) y el directorio ra√≠z (/).

Visita la URL de tu GitHub Pages (ej. https://tu-usuario.github.io/tu-repositorio/) y ¬°ya estar√° funcionando!
